name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read
  id-token: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy, llvm-tools-preview
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Install ninja-build tool for aws-lc-fips-sys on Windows
        if: runner.os == 'Windows'
        uses: seanmiddleditch/gha-setup-ninja@v6
      - name: Install NASM for aws-lc-fips-sys on Windows
        if: runner.os == 'Windows'
        uses: ilammy/setup-nasm@v1
      - name: Install golang for aws-lc-fips-sys on macos
        if: runner.os == 'MacOS'
        uses: actions/setup-go@v6
        with:
          go-version: "stable"
      - name: Check licenses
        run: |
          cargo install cargo-deny
          cargo-deny check licenses
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose --all-features --no-fail-fast
      - name: Code Coverage
        run: cargo llvm-cov --all-features --workspace --codecov --output-path ./codecov.json
      - name: Publish Code Coverage
        uses: codecov/codecov-action@v5
        with:
          files: ./codecov.json
          fail_ci_if_error: true
          use_oidc: true
      - name: Lint
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features
